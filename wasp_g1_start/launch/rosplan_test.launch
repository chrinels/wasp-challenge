<launch>
  <!-- Start the Bebop Action Server 
  <node name="bebop_action_server" pkg="bebop_controller" type="BebopActionServer.py" output="screen" ns='drone0'>
  <param name="test_mode" type="boolean" value="true" />
  </node>

  <node name="bebop_action_server" pkg="bebop_controller" type="BebopActionServer.py" output="screen" ns='drone1'>
  <param name="test_mode" type="boolean" value="true" />
  </node>
-->
  <!-- Start the Coordinator -->
  <node pkg="coordinator" type="main.py" name="coordinator" args="$(find coordinator)/waypoints.csv" output="screen">
  <param name="coordinate_frame" type="string" value="map" />
  </node>

  <!-- Start the World state node -->
  <node pkg="coordinator" type="world_state.py" name="world_state" output="screen">
  	<param name="use_rosplan" type="boolean" value="True" />
  	<param name="world_config_file" type="string" value="$(find coordinator)/config/$(optenv PLANNER_WORLD test_world.yaml)" />
  </node>

  <!-- Start the Action feeder 
  <node pkg="coordinator" type="action_feeder.py" name="action_feeder" args="$(find coordinator)/actions_bebop.csv" output="screen">
  </node>
  -->

  <!-- ROSPLAN -->
  <!-- data paths -->
	<param name="/rosplan/data_path" value="$(find rosplan_config)/planner/" />
	<param name="/rosplan/planner_path" value="$(find rosplan_config)/planner/bin/" />

	<!-- domain file -->
	<param name="/rosplan/domain_path" value="$(find wasp_g1_start)/planner/$(optenv PLANNER_DOMAIN durative_domain.pddl)" />

	<!-- knowledge base -->
	<node name="rosplan_knowledge_base" pkg="rosplan_knowledge_base" type="knowledgeBase" respawn="false" output="screen" />

	<!-- scene database (MongoDB) -->
	<node name="rosplan_scene_database" pkg="mongodb_store" type="mongodb_server.py" respawn="false" output="log">
		<param name="database_path" value="$(find rosplan_config)/knowledge_base/mongoDB" />
	</node>
	<node name="rosplan_scene_message_store" pkg="mongodb_store" type="message_store_node.py" respawn="false" output="log" />

	<!-- planning system -->
	<node name="rosplan_planning_system" pkg="rosplan_planning_system" type="planner" respawn="false" output="screen">
		<!-- directory for generated files -->
		<param name="data_path" value="$(find wasp_g1_start)/planner/" />
		<param name="problem_path" value="$(find wasp_g1_start)/planner/problem.pddl" />
		<param name="strl_file_path" value="$(find wasp_g1_start)/planner/plan.strl" />

		<!-- to run the planner -->
		<param name="planner_command" value="timeout 20 $(find rosplan_config)/planner/bin/popf -n DOMAIN PROBLEM" />
		<param name="generate_default_problem" value="true" />
		<param name="max_dispatch_attempts" value="2" />
	</node>

  

</launch>
